{
    "course title": "02613 Python and High-Performance Computing",
    "Danish title": "Python og High-Performance Computing",
    "Language of instruction": "English",
    "Point( ECTS )": "5",
    "Course type": "MSc\nProgramme specific course (MSc), Autonomous Systems\nProgramme specific course (MSc), Human-Centered Artificial Intelligence\nProgramme specific course (MSc), Mathematical Modelling and Computation\nElective course (B Eng), Mobility, Transport and Logistics",
    "Schedule": "Spring F5A (Wed 8-12)",
    "Location": "Campus Lyngby",
    "Scope and form": "Lectures and computer exercises.",
    "Duration of Course": "13 weeks",
    "Date of examination": "F5A",
    "Type of assessment": "Written examination\nIt is a requirement for participating in the exam that a certain part of the mandatory assignments are approved. These assignments are not part of the final exam assessment.",
    "Exam duration": "Written exam: 4 hours",
    "Aid": "All Aid - no access to the internet",
    "Evaluation": "7 step scale , external examiner",
    "Academic prerequisites": "02002/02003 , or equivalent experience with programming in Python is required. Knowledge of the Linux command line, and programming of shell-scripts.",
    "Responsible": "Matthias Bo Stuart , Lyngby Campus, Building 322, Ph. (+45) 4525 3866 , mbst@dtu.dk",
    "Course co-responsible": "Sven Karlsson , Ph. (+45) 4525 3754 , svea@dtu.dk\nBernd Dammann , Lyngby Campus, Building 303B, Ph. (+45) 4525 3371 , beda@dtu.dk\nPatrick MÃ¸ller Jensen , Lyngby Campus, Building 324 , patmjen@dtu.dk",
    "Department": "01 Department of Applied Mathematics and Computer Science",
    "Registration Sign up": "At the Studyplanner",
    "General course objectives": "General course objectives\nThis course equips students with the essential skills to effectively tackle substantial computational problems within scientific computing and related domains using the Python programming language. Python is particularly powerful when combined with specialized modules like NumPy for numerical and scientific computations, but understanding how to leverage its potential for high-performance computing (HPC) is nontrivial. Many applications fall short of utilizing the available processing power due to a lack of knowledge in implementing efficient programs and workflows. This course bridges that gap by providing students with an introduction to HPC methods within Python, enabling them to efficiently implement and deploy solutions on a spectrum of hardware, from personal laptops to larger HPC installations. Through this course, students will learn to harness the full potential of Python and modern computing architectures to tackle complex computational challenges effectively.",
    "Learning objectives": "A student who has met the objectives of the course will be able to:\nexplain the fundamental performance aspects of modern multi-core computer systems and GPUs\nutilize the interplay of hardware (CPU, GPU, memory hierarchy and I/O) and software components (Python code, libraries)\nanalyze scientific computing problems and implement efficient solutions\nmake use of different computational resources\nidentify performance bottlenecks in Python programs\nimprove performance of Python programs\napply parallelization techniques using Python\nconduct and document computer experiments (performance measurements)\nevaluate the performance and scalability of parallel programs\nuse established analytical evaluation models, such as models for resource usage",
    "Content": "Introduction to high-performance computers with an emphasis on important aspects when dealing with large, computationally demanding problems.\nMulti-core computers and GPUs: introduction to architecture with an emphasis on usability from a high-level language like Python.\nTools to measure performance.\nUsage of Python and relevant modules.\nPerformance challenges when using the Python language.\nEfficient numerical calculations with NumPy.\nParallel programming with Python and optimizing language extensions.\nGPU programming with Python.\nDesign of efficient workflows to solve problems on different platforms.\nUsage of modern HPC installations.",
    "Remarks": "Programming and implementation of Python code, as well as using the Linux command line, is an essential part of the course.",
    "Last updated": "12. november, 2024"
}