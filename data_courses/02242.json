{
    "course title": "02242 Program Analysis",
    "Danish title": "Programanalyse",
    "Language of instruction": "English",
    "Point( ECTS )": "7,5",
    "Course type": "MSc\nOffered as a single course\nGeneral competence course (MSc), Computer Science and Engineering\nProgramme specific course (MSc), Computer Science and Engineering\nTechnological specialization course (MSc), Computer Science and Engineering",
    "Schedule": "Autumn E2A (Mon 13-17)",
    "Location": "Campus Lyngby",
    "Scope and form": "Lectures and practical exercises.",
    "Duration of Course": "13 weeks",
    "Date of examination": "E2A, Due to the number of students extra exam days may be needed.",
    "Type of assessment": "Oral examination and reports\nA paper written as part of group work is the basis for an oral group exam.",
    "Aid": "Written works of reference are permitted",
    "Evaluation": "7 step scale , external examiner",
    "Academic prerequisites": "02141 , The students are expected to be familiar with regular and context-free languages as well as semantics; this background can be obtained in the course 02141. The students must be fluent in at least one programming language and be able to use relevant data structures.",
    "Responsible": "Christian Gram Kalhauge , Lyngby Campus, Building 321 , chrg@dtu.dk",
    "Course co-responsible": "Alberto Lluch Lafuente , Lyngby Campus, Building 321, Ph. (+45) 4525 3736 , albl@dtu.dk",
    "Department": "01 Department of Applied Mathematics and Computer Science",
    "Home page": "https://courses.compute.dtu.dk/02242",
    "Registration Sign up": "At the Studyplanner",
    "General course objectives": "General course objectives\nThe students will be able to automatically derive facts from programs using different program analyses.",
    "Learning objectives": "A student who has met the objectives of the course will be able to:\nexplain the concepts for soundness and completeness and the limitations of program analysis;\nexplain the benefits and tradeoffs associated with syntactic, semantic, dynamic and static analyses;\ndesign an analysis to solve a specific problem;\nformulate theoretical guarantees and limitations of the analysis;\nargument for the approach in a project proposal;\nimplement an analysis for part of a real programming language;\ndesign and motivate a series of experiments using this analysis and interpret the results obtained;\ncommunicate their results in a clear and precise manner in a paper format; and\nachieve the above goals in a group effort while at the same time maintaining individual accountability.",
    "Content": "In this course, the student will become familiar with different ways of deriving facts from programs, using both dynamic and static analyses. The course will focus on analyses for the JVM, but the students are encouraged to work on any language they want. The theoretical part of the course will be covered in the first half of the course; after which the students should write a proposal for a group project. Finally, the students will carry out experiments verifying their ideas, which they will write up in a paper and present orally.",
    "Course literature": "The course will use relevant papers and lecture notes. Materials will be made available on DTU Learn.",
    "Last updated": "02. maj, 2024"
}