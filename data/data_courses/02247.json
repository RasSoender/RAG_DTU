{
    "course title": "02247 Compiler Construction",
    "Danish title": "Oversætterkonstruktion",
    "Language of instruction": "English",
    "Point( ECTS )": "5",
    "Course type": "MSc\nOffered as a single course\nProgramme specific course (MSc), Computer Science and Engineering\nTechnological specialization course (MSc), Computer Science and Engineering\nElective course (B Eng), Software Technology",
    "Schedule": "Spring F2B (Thurs 8-12)",
    "Location": "Campus Lyngby",
    "Scope and form": "Lectures, theoretical exercises, and practical exercises.",
    "Duration of Course": "13 weeks",
    "Date of examination": "F2B, Additional days could be necessary depending on the number of students",
    "Type of assessment": "Oral examination and reports\nThe exam is based on the project and report that the students have worked on during the course.",
    "Evaluation": "7 step scale , external examiner",
    "Academic prerequisites": "0214102157 , The students are expected to be familiar with fundamental computer science concepts like inference rules, regular expressions, and context-free grammars. This background can be obtained in the course 02141. The students must be fluent in at least one programming language; experience with functional programming (in particular, with F#) is highly recommended. This background can be obtained in the course 02157.",
    "Responsible": "Alceste Scalas , Ph. (+45) 4525 3759 , alcsc@dtu.dk",
    "Department": "01 Department of Applied Mathematics and Computer Science",
    "Registration Sign up": "At the Studyplanner",
    "Green challenge participation": "Please contact the teacher for information on whether this course gives the student the opportunity to prepare a project that may participate in DTU´s Study Conference on sustainability, climate technology, and the environment (GRØN DYST). More infor http://www.groendyst.dtu.dk/english",
    "General course objectives": "General course objectives\nCompilers contribute to the reliability of software systems by analyzing and optimizing the system's code, and by guaranteeing properties of the generated executables. Many IT companies (including e.g. Google, Facebook, and Microsoft) create and maintain compilers for new and existing programming languages.\n\nThis course teaches techniques to efficiently implement modern programming languages, and to guarantee reliability of the generated executables. We cover essential techniques in modern compilers, from implementation of high-level concepts over optimizations to run-time support for new hardware architectures. During the course, students will work in groups on a compiler for a realistic programming language.",
    "Learning objectives": "A student who has met the objectives of the course will be able to:\nexplain the contribution of compilers to the reliability of software systems;\nexplain the structure of optimising compilers and the functionality of the different phases;\nexplain the relation between high-level language, intermediate representation, analyses, and optimisations;\nexplain the process of code generation for modern computer architectures, including virtual machines\nextend a compiler to add new functionalities to a programming language\nuse modern tools to implement parts of compilers, and explain their functionality;\nimplement a compiler for a realistic programming language, or extend an existing one;\nachieve the above results in a group project while at the same time maintaining individual accountability; and\ncommunicate the obtained results in a clear and precise manner using a standard form for technical reports.",
    "Content": "The course covers three main topics:\n(1) The compilation process: from high-level programming language to hardware architectures and virtual machines;\n(2) Intermediate representations and their role in compilers; and\n(3) Lexing, parsing, code analysis, code generation, and optimizations.\nThe course project requires to extend an existing compiler framework to support more advanced programming language features.",
    "Last updated": "02. maj, 2024"
}