{
    "course title": "02616 Large-scale Modelling",
    "Danish title": "Storskala modellering",
    "Language of instruction": "English",
    "Point( ECTS )": "5",
    "Course type": "MSc\nProgramme specific course (MSc), Mathematical Modelling and Computation\nTechnological specialization course (MSc), Mathematical Modelling and Computation",
    "Schedule": "Spring F3A (Tues 8-12)",
    "Location": "Campus Lyngby",
    "Scope and form": "Lectures, computer exercises and computer projects.",
    "Duration of Course": "13 weeks",
    "Date of examination": "F3A",
    "Type of assessment": "Oral examination and reports\nTwo reports made by groups of 2-3 persons. Brief examination based on questions from the report assignments. The mark is given by an overall assessment.",
    "Aid": "No Aid",
    "Evaluation": "7 step scale , internal examiner",
    "Academic prerequisites": "02613/02614 , Experience with numerical computations. A student should be proficient in Python (especially class constructs). Knowledge of the Linux/Unix command line, and programming of shell-scripts is an advantage.",
    "Responsible": "Bernd Dammann , Lyngby Campus, Building 303B, Ph. (+45) 4525 3371 , beda@dtu.dk",
    "Department": "01 Department of Applied Mathematics and Computer Science",
    "Home page": "http://www.compute.dtu.dk/courses/02616",
    "Registration Sign up": "At the Studyplanner",
    "General course objectives": "General course objectives\nPython can be a powerful language to tackle large-scale computational problems within scientific computing and related domains, when combined with specialized modules, like NumPy for numerical and scientific computations, and MPI4Py to scale out to clusters of computers. However, understanding how to get good performance when using those modules is nontrivial. This course aims at developing the necessary skills to exploit the potential processing power on modern compute clusters and architectures.\nThis course builds upon the skills acquired in the courses 02613 or 02614. It gives an overview of existing software, methods and tools for large-scale modelling, and enables the students to work with large-scale problems in Scientific Computing and their implementation on modern compute clusters.\nThe obtained knowledge will be applied in project work to model examples of large systems.",
    "Learning objectives": "A student who has met the objectives of the course will be able to:\nanalyze the performance of Scientific Computing problems\ndevelop parallel programs with MPI and Python\ndesign and write parallel codes in Python for Scientific Computing problems\napply HPC methods on large scale models\nmake use of the right tools and libraries for a given problem\nfind strategies when going from small to large problems\ndesign, carry out and evaluate computational experiments\napply validation techniques",
    "Content": "Introduction to high-performance computing techniques, emphasizing those aspects that are important in connection with numerical computations on large data sets/large-scale problems.\nUsage of message passing paradigm (MPI) in Python: point-to-point and collective communications, non-blocking communications, communicators, virtual topologies and one-sided communication.\nHands-on and experiments, to locate and solve computational and communication bottlenecks.\nNumerical methods for large-scale computations, including how to efficiently determine an optimal data partitioning scheme.\nApplication of the topics above on relevant models that require many hardware resources, e.g. memory, CPU time, etc. Note: the methods used in this course are in general not applicable to ML/AI problems!",
    "Remarks": "Implementation of programs in Python, as well as the usage of HPC systems, is an essential part of the course. Contact the responsible course teacher about the prerequisites.\nThe course material consists of notes handed out by the lecturers.\nThe course covers modelling and the interplay between the model and methods in HPC.\nThe course is aimed at students from all master programs.",
    "Last updated": "02. maj, 2024"
}