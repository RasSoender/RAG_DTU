{
    "course title": "34373 Introduction to microcontroller development for IoT using embedded C",
    "Danish title": "Introduktion til mikrokontroller-programmering til IoT med embedded C",
    "Language of instruction": "English",
    "Point( ECTS )": "5",
    "Course type": "MSc\nOffered as a single course\nProgramme specific course (MSc), Communication Technologies and System Design\nProgramme specific course (MSc), Electrical Engineering\nTechnological specialization course (MSc), Communication Technologies and System Design\nTechnological specialization course (MSc), Electrical Engineering\nElective course (B Eng), Electrical Engineering",
    "Schedule": "Spring F3A (Tues 8-12)",
    "Location": "Campus Lyngby",
    "Duration of Course": "13 weeks",
    "Date of examination": "Decide with teacher",
    "Type of assessment": "Evaluation of exercises/reports\nEvaluation of report.",
    "Evaluation": "pass / not pass , internal examiner",
    "Academic prerequisites": "34315 / 34346 / 34365 / 34338 , C programming experience / Embedded systems / Electronics / Arduino / IoT",
    "Participants restrictions": "Maximum: 15",
    "Responsible": "Martin Nordal Petersen , Lyngby Campus, Building 343, Ph. (+45) 4525 6381 , mnpe@dtu.dk",
    "Department": "34 Department of Electrical and Photonics Engineering",
    "Registration Sign up": "At the Studyplanner",
    "Green challenge participation": "Please contact the teacher for information on whether this course gives the student the opportunity to prepare a project that may participate in DTU´s Study Conference on sustainability, climate technology, and the environment (GRØN DYST). More infor http://www.groendyst.dtu.dk/english",
    "General course objectives": "General course objectives\nThis course will focus on embedded hardware development for low-power Internet of Things (IoT) using embedded C firmware programming on the STM32 microcontroller. The purpose of this course is to introduce the student to advanced methods of developing firmware on ARM-Cortex microcontrollers (MCUs), specifically for IoT purposes, for example interfacing with digital and analog sensors and wireless communication modules. The student will be working with low-level MCU configuration and firmware development to configure and apply timers, interrupts, analog-to-digital-conversion, various serial communication protocols as well as wireless communication with IoT relevant technologies such as for example Lora/LoraWAN, BLE and NBIoT/LTE-M. The Arduino IDE will not be used in this course.",
    "Learning objectives": "A student who has met the objectives of the course will be able to:\nDescribe the essence and challenges of Internet of Things.\nAnalyse and plan for implementation of optimal networking technology.\nImplement embedded C code in an ARM Cortex based MCU.\nConfigure clock and peripherals in a STM32 evaluation board.\nSet and configure up the GPIOs of an ARM Cortex based microcontroller for serial communication (UART, I2C, SPI)\nSet up the GPIOs of an ARM-based microcontroller for ADC/DAC.\nDevelop embedded programs to transmit/receive data.\nImplement UART/SPI/I2C communication protocols in firmware.\nDescribe concepts of RTOS and multi-threading in an embedded system.\nIndependently analyse and implement solution to an embedded implementation problem.\nDeploy and showcase a developed IoT system and application.\nDocument project work in report.",
    "Content": "The purpose of this course is to introduce the student to advanced methods of developing firmware on ARM-Cortex MCUs for IoT purposes. In particular, focus will be on setting up the MCU, for example configuring the GPIOs, UART, interrupts and timers, SPI and I2C communication and analog-digital (ADC/DAC) functionality.\nThe, Arduino-free, embedded approach to microcontroller firmware development will provide the student with an understanding of the capabilities of an embedded system for Internet of Things. The students will touch upon the topic of Real-time operating system (RTOS) environment and briefly be introduced to running multiple threads on the ARM processor.\nThe course is structured around lectures and exercises where the student will gain hands-on experience within MCU firmware programming, primarily using STMCubeIDE and STMCubeMX. During the exercises, the student will learn to configure UART/SPI or I2C peripherals to communicate with digital sensors / modules. The student will also learn to configure and use the internal analog-to-digital converter (ADC) to read and digitize analog sensor data.\n\nThe course will have a focus on IoT such that low-power communication, e.g. LPWAN communication technologies (Lora/LoraWAN, SigFox or NBIoT/LTE-M) and/or BLE will be utilized for wireless data transmission during the course and project work.\nThe student is expected to have prior knowledge about C/C++.\n\nDuring the course, the students will be planning and developing their own projects in groups and evaluated from a presentation and/or report.\n\nCourse keywords: Embedded systems, Low-power embedded firmware development for IoT, bare-metal programming, STM32, Nucleo, Bluepill, CubeIDE, CubeMX, FreeRTOS, tasks and semaphores, no-Arduino.",
    "Last updated": "02. maj, 2024"
}