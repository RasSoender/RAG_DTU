{
    "course title": "02214 Hardware/Software Codesign",
    "Danish title": "Hardware/Software Codesign",
    "Language of instruction": "English",
    "Point( ECTS )": "5",
    "Course type": "MSc",
    "Schedule": "Spring F1B (Thurs 13-17)",
    "Location": "Campus Lyngby",
    "Scope and form": "Lectures, lab exercises and project.",
    "Duration of Course": "13 weeks",
    "Date of examination": "F1B",
    "Type of assessment": "Written examination and reports",
    "Exam duration": "Written exam: 4 hours",
    "Aid": "Written works of reference are permitted",
    "Evaluation": "7 step scale , internal examiner",
    "Academic prerequisites": "Students are expected to have prior knowledge in computer engineering, digital design, and programming languages such as C, VHDL, or Chisel.",
    "Responsible": "Edward Alexandru Todirica , Ph. (+45) 4525 3748 , eato@dtu.dk",
    "Department": "01 Department of Applied Mathematics and Computer Science",
    "Registration Sign up": "At the Studyplanner",
    "Green challenge participation": "Please contact the teacher for information on whether this course gives the student the opportunity to prepare a project that may participate in DTU´s Study Conference on sustainability, climate technology, and the environment (GRØN DYST). More infor http://www.groendyst.dtu.dk/english",
    "General course objectives": "General course objectives\nThis advanced, hands-on course in computer engineering explores the design and optimization of software and hardware components for the Xilinx Zynq platform. Students will learn how to leverage the ARM CPU core for software development, implement FPGA-based hardware accelerators, and integrate custom IP cores. The course covers various programming languages, including C for software development, and hardware description languages (for example: Chisel, VHDL, and HLS for hardware design). Students will explore the implementation of machine learning accelerators, memory mapping and IO interfaces. The course utilizes resources from the Zynq Book and accompanying lab book, providing students with practical exercises and real-world examples.",
    "Learning objectives": "A student who has met the objectives of the course will be able to:\nUnderstand the architecture and components of the Xilinx Zynq platform, including the ARM CPU core and FPGA.\nDevelop and optimize C programs for the ARM CPU core in a bare-metal environment.\nProfile C programs to identify performance bottlenecks and opportunities for hardware acceleration.\nImplement hardware accelerators on the FPGA using pre-existing IP cores and custom IP cores developed in a hardware description languages (for example: Chisel, VHDL, or HLS)\nUtilize the AXI bus for communication between the ARM CPU, IO devices, and IP cores on the FPGA.\nUtilize the interrupt system for the ARM CPU core.\nCreate and use custom IO devices in a hardware-software co-design context.\nUnderstand memory mapping and use it in the communication between the CPU, memory and IO-devices\nApply the knowledge and skills acquired in the course to real-world computer engineering problems and projects.",
    "Content": "• Xilinx Zynq platform architecture\nARM CPU core\nFPGA\n• Software development on ARM CPU core\nC programming in a bare-metal environment\nProgram optimization techniques\n• Hardware development on FPGA\nUsing pre-existing IP cores\nDeveloping custom IP cores in Chisel/VHDL/ HLS\n• Profiling and performance analysis\nIdentifying bottlenecks\nDetermining opportunities for hardware acceleration\n• AXI bus for CPU, IO devices, and IP core communication\n• Interrupt systems\n• Design and management for ARM CPU core\n• IO devices\n• Creating and using custom IO devices in hardware-software co-design\n• Memory mapping techniques\n• Designing memory and IO interfaces\n• Real-world applications\n• Applying skills and knowledge to computer engineering projects\n• Lab exercises and tutorials\n• Practical hands-on learning with the Zynq Book and accompanying lab materials",
    "Course literature": "The Zynq Book: Embedded Processing with the ARM Cortex-A9 on the Xilinx Zynq-7000 All Programmable SoC\nThe Zynq Book Tutorials for Zybo and ZedBoard",
    "Last updated": "02. maj, 2024"
}