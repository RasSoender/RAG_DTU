{
    "course title": "02162 Software Engineering 2",
    "Danish title": "Software Engineering 2",
    "Language of instruction": "English",
    "Point( ECTS )": "10",
    "Course type": "MSc\nOffered as a single course\nElective course (B Eng), Software Technology",
    "Schedule": "Autumn E3 (Tues 8-12, Fri 13-17)",
    "Location": "Campus Lyngby",
    "Scope and form": "Lectures, tutorials and student presentations, along with a project.",
    "Duration of Course": "13 weeks",
    "Type of assessment": "Evaluation of exercises/reports\nThe evaluation will be individualized by indicating the authors of sections/subsections in the report, by author tags in the submitted code and by presentations during the course, where each student has at least one individual occurrence.",
    "Aid": "All Aids - with access to the internet",
    "Evaluation": "7 step scale , internal examiner",
    "Academic prerequisites": "02105.02161 , Courses \"Algorithms and Data Structures 1\" (02105) and \"Software Engineering 1\" (02161) or equivalent courses are recommended prerequisites for this course.",
    "Responsible": "Ekkart Kindler , Lyngby Campus, Building 321, Ph. (+45) 4525 3750 , ekki@dtu.dk",
    "Department": "01 Department of Applied Mathematics and Computer Science",
    "Home page": "http://www2.compute.dtu.dk/courses/02162/",
    "Registration Sign up": "At the Studyplanner",
    "Green challenge participation": "Please contact the teacher for information on whether this course gives the student the opportunity to prepare a project that may participate in DTU´s Study Conference on sustainability, climate technology, and the environment (GRØN DYST). More infor http://www.groendyst.dtu.dk/english",
    "General course objectives": "General course objectives\nTo give the students skills in professional development of large software systems.",
    "Learning objectives": "A student who has met the objectives of the course will be able to:\nlist the different activities in developing software\nlist software development process models and choose an appropriate software development process model for a given task\nanalyse a problem domain and build a domain model\ncapture and document requirements\ndesign a software system\nchoose an appropriate architecture for a software system\ndocument software designs and software architectures\nanalyse/evaluate a design\nimplement a design\ndevise and implement a test plan",
    "Content": "Domain engineering.\nRequirements engineering.\nSoftware architeture.\nSoftware design.\nImplementation techniques.\nTest, validation, and verification.\nSoftware development process models.\nProject management.",
    "Last updated": "02. maj, 2024"
}